name: Publish Docker image

on:
  push:
    branches: ['main']

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: thilina9718/deploy-app
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
          
      - uses: actions/checkout@v2
      - name: Start minikube
        uses: medyagh/setup-minikube@latest
      # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster!
        run: kubectl get pods -A
      - name: Build image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          docker build -f ./Dockerfile -t thilina9718/deploy-app:latest .
          echo -n "verifying images:"
          docker images 
      - name: Deploy to minikube
        run: |
          kubectl apply -f deployment.yml
          kubectl get pods
      - name: Test service URLs
        run: |
          minikube service list
          kubectl get svc -o wide
          kubectl get ep -o wide
          kubectl expose deployment deployment-nodeapp --type=LoadBalancer --port=8080
          minikube service service-nodeapp --url
          echo -n "------------------opening the service------------------"
          curl $(minikube service service-nodeapp --url)/version
          
      
